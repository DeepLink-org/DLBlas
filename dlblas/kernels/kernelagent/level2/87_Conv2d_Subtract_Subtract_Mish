import torch
import torch.nn as nn
import triton
import triton.language as tl

@triton.jit
def fused_ops_kernel(
    x_ptr,
    output_ptr,
    total_sub,
    n_elements,
    BLOCK_SIZE: tl.constexpr,
):
    pid = tl.program_id(0)
    block_start = pid * BLOCK_SIZE
    offsets = block_start + tl.arange(0, BLOCK_SIZE)
    mask = offsets < n_elements
    
    x = tl.load(x_ptr + offsets, mask=mask)
    x = x - total_sub
    
    # Stable Mish activation implementation
    abs_x = tl.abs(x)
    log_term = tl.log(1 + tl.exp(-abs_x))
    max0 = tl.maximum(x, 0)
    sp = max0 + log_term
    
    # Replace unsupported tl.tanh with mathematical equivalent
    tanh_input = 2 * sp
    sigmoid = 1 / (1 + tl.exp(-tanh_input))
    tanh_sp = 2 * sigmoid - 1
    
    out = x * tanh_sp
    
    tl.store(output_ptr + offsets, out, mask=mask)

class ModelNew(nn.Module):
    """
    Model that performs a convolution, subtracts two values, applies Mish activation.
    """
    def __init__(self, in_channels, out_channels, kernel_size, subtract_value_1, subtract_value_2):
        super(ModelNew, self).__init__()
        self.conv = nn.Conv2d(in_channels, out_channels, kernel_size)
        self.subtract_value_1 = subtract_value_1
        self.subtract_value_2 = subtract_value_2

    def forward(self, x):
        x = self.conv(x)
        x = x.contiguous()
        n_elements = x.numel()
        output = torch.empty_like(x)
        
        total_sub = self.subtract_value_1 + self.subtract_value_2
        BLOCK_SIZE = 1024
        grid = (triton.cdiv(n_elements, BLOCK_SIZE),)
        
        fused_ops_kernel[grid](
            x, output, total_sub, n_elements, 
            BLOCK_SIZE=BLOCK_SIZE
        )
        return output

batch_size = 128
in_channels = 3
out_channels = 16
height, width = 32, 32
kernel_size = 3
subtract_value_1 = 0.5
subtract_value_2 = 0.2

def get_inputs():
    return [torch.randn(batch_size, in_channels, height, width)]

def get_init_inputs():
    return [in_channels, out_channels, kernel_size, subtract_value_1, subtract_value_2]
